package GUI;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * Interfaz gráfica de usuario que representa el panel de registro para usuarios
 * 
 * @author Edu
 */
public class Registro extends javax.swing.JFrame {

    private final Fachada fachada = Fachada.getInstancia();

    /**
     * Creates new form Registro
     */
    public Registro() {
        initComponents();
    }

    /**
     * Método que comprueba que todos los datos que ha insertado el usuario
     * se encuentran en un formato adecuado y son correctos
     * 
     * @return -> true si todos los campos son correctos, false si hay algún 
     * tipo de error
     */
    private boolean verificarCampos() {
        String usuario = tfUsuario.getText();
        String email = tfEmail.getText();
        String password = String.valueOf(pfPassword.getPassword());
        String dni = tfDNI.getText();
        String edad = tfEdad.getText();
        String telefono = tfTelefono.getText();

        int edadInt;
        int telefonoInt;

        boolean correcto = true;

        if (usuario.equals("")) {
            correcto = false;
            mostrarDialogError("Rellena el campo usuario. ");
        }

        if (email.equals("") || !(email.contains("@"))) {
            correcto = false;
            mostrarDialogError("Escribe un email correcto.");
        }

        if (password.equals("") || password.length() < 8) {
            correcto = false;
            mostrarDialogError("Escribe una contraseña correcta, de al menos 8 caracteres. ");
        }

        if (!dniCorrecto(dni)) {
            correcto = false;
            mostrarDialogError("Escribe un DNI correcto. ");
        }

        try {
            edadInt = Integer.valueOf(edad);
            if (edadInt < 18) {
                correcto = false;
                mostrarDialogError("Debes de ser mayor de edad. ");
            }

        } catch (Exception e) {
            correcto = false;
            mostrarDialogError("Escribe una edad correcta.");
        }

        try {
            telefonoInt = Integer.valueOf(telefono);
            if (telefonoInt < 600000000) {
                correcto = false;
                mostrarDialogError("Escribe un teléfono adecuado. ");
            }

        } catch (Exception e) {
            correcto = false;
            mostrarDialogError("Escribe una teléfono adecuado.");
        }

        // Verifico que no es DNI duplicado:
        if (fachada.recuperarUsuario(dni) != null && correcto) {
            mostrarDialogError("El DNI ya existe en la BBDD. ");
            correcto = false;
        }

        return correcto;

    }

    /**
     * Comprobación de si el DNI que ha insertado el usuario está en un formato
     * adecuado.
     *
     * @param dni -> DNI a comprobar
     * @return -> true si es válido, false si no lo es
     */
    public boolean dniCorrecto(String dni) {
        boolean correcto = false;

        Pattern pattern = Pattern.compile("(\\d{1,8})([TRWAGMYFPDXBNJZSQVHLCKEtrwagmyfpdxbnjzsqvhlcke])");

        Matcher matcher = pattern.matcher(dni);

        if (matcher.matches()) {
            String letra = matcher.group(2);
            String letras = "TRWAGMYFPDXBNJZSQVHLCKE";

            int index = Integer.parseInt(matcher.group(1));
            index = index % 23;
            String reference = letras.substring(index, index + 1);

            correcto = reference.equalsIgnoreCase(letra);
        } else {
            correcto = false;
        }

        return correcto;
    }

    /**
     * Método auxiliar para mostrar JOptionPane con mensajes de error
     *
     * @param texto -> texto que queremos que saque el JOptionPane
     */
    public void mostrarDialogError(String texto) {
        String mensajeError = "El registro no es válido.\n" + texto;
        JOptionPane.showMessageDialog(
                this,
                mensajeError,
                "Error en el registro",
                JOptionPane.ERROR_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lLoguin = new javax.swing.JLabel();
        tfUsuario = new javax.swing.JTextField();
        pfPassword = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        lUsuario = new javax.swing.JLabel();
        bRegistro = new javax.swing.JButton();
        tfEmail = new javax.swing.JTextField();
        lUsuario1 = new javax.swing.JLabel();
        tfDNI = new javax.swing.JTextField();
        lUsuario2 = new javax.swing.JLabel();
        tfEdad = new javax.swing.JTextField();
        lUsuario3 = new javax.swing.JLabel();
        tfTelefono = new javax.swing.JTextField();
        lUsuario4 = new javax.swing.JLabel();
        bAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Biblioteca - Registro");
        setResizable(false);

        lLoguin.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lLoguin.setText("Biblioteca - Registro");

        jLabel2.setText("Contraseña: ");

        lUsuario.setText("Usuario: ");

        bRegistro.setText("Registrarse");
        bRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegistroActionPerformed(evt);
            }
        });

        lUsuario1.setText("Email: ");

        lUsuario2.setText("DNI:");

        lUsuario3.setText("Edad:");

        lUsuario4.setText("Teléfono:");

        bAtras.setText("Atrás");
        bAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(bAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lUsuario4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(tfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lUsuario3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(tfEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lUsuario2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(tfDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lUsuario1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lLoguin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(155, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(lLoguin, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lUsuario1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lUsuario2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lUsuario3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lUsuario4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(bAtras)
                        .addGap(14, 14, 14))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que gestiona la pulsación del botón de registro.
     * Recoge los datos de la interfaz, los verifica y, si son correctos,
     * redirige el usuario a la ventana de inicio.
     *
     * @param evt -> evento de pulsar el botón
     */
    private void bRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegistroActionPerformed
        String usuario = tfUsuario.getText();
        String email = tfEmail.getText();
        String password = String.valueOf(pfPassword.getPassword());
        String dni = tfDNI.getText();
        String edad = tfEdad.getText();
        String telefono = tfTelefono.getText();

        if (verificarCampos()) {
            fachada.registroUsuario(usuario, password, email, dni, edad, telefono);
            JOptionPane.showMessageDialog(
                    this,
                    "Te has registrado correctamente. Ya puedes iniciar sesión. ",
                    "Registro exitoso.",
                    JOptionPane.INFORMATION_MESSAGE);
            new Inicio().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_bRegistroActionPerformed

    /**
     * Método que gestiona la pulsación del botón de atrás.
     * Crea una nueva ventana de Inicio y se deshace de esta.
     *
     * @param evt -> evento de pulsar el botón
     */
    private void bAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtrasActionPerformed
        new Inicio().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bAtrasActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtras;
    private javax.swing.JButton bRegistro;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lLoguin;
    private javax.swing.JLabel lUsuario;
    private javax.swing.JLabel lUsuario1;
    private javax.swing.JLabel lUsuario2;
    private javax.swing.JLabel lUsuario3;
    private javax.swing.JLabel lUsuario4;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfDNI;
    private javax.swing.JTextField tfEdad;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfTelefono;
    private javax.swing.JTextField tfUsuario;
    // End of variables declaration//GEN-END:variables
}
