package GUI;

import ClasesBase.Libro;
import ClasesBase.Usuario;
import Iterator.ColeccionLibros;
import Iterator.IteradorLibros;
import javax.swing.JOptionPane;

/**
 *
 * Interfaz de usuario que representa la devolución de libros para clientes
 * de la biblioteca.
 * 
 * @author Edu
 */
public class DevolverLibros extends javax.swing.JFrame {

    private final Fachada fachada = Fachada.getInstancia();
    private final ColeccionLibros libros;
    private Usuario usuario;
    
    /**
     * Creates new form DevolverLibros
     * @param usuario
     */
    public DevolverLibros(Usuario usuario) {
        this.usuario = usuario;
        this.libros = fachada.consultarLibrosPrestados(usuario.getDni());
        initComponents();
        comprobarLibrosUsuario();
    }

    /**
     * Método que gestiona de forma dinámica los libros que tiene un usuario
     * por devolver.
     * Si no tiene ninguno, se eliminan de la interfaz aquellos elementos 
     * relacionados con la devolución de libros.
     * Si tiene libros por devolver, se cargan esos libros en el ComboBox
     */
    private void comprobarLibrosUsuario() {
        this.cbMisLibros.removeAllItems();
        if(this.libros.estaVacio()) {
            this.cbMisLibros.setVisible(false);
            this.bDevolver.setVisible(false);
            this.lEscoger.setVisible(false);
            this.lError.setVisible(true);
        }
        else {
            this.lError.setVisible(false);
            
            IteradorLibros it = libros.getIterador();
            
            while(it.siguiente()) {
                this.cbMisLibros.addItem(it.getElemento().getNombre());
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbMisLibros = new javax.swing.JComboBox<>();
        lEscoger = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bDevolver = new javax.swing.JButton();
        bAtras = new javax.swing.JButton();
        lError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Biblioteca - Devolución de Libros");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lEscoger.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lEscoger.setText("Escoja el libro que desea devolver");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Devolución de Libros");

        bDevolver.setText("Devolver");
        bDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDevolverActionPerformed(evt);
            }
        });

        bAtras.setText("Atrás");
        bAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAtrasActionPerformed(evt);
            }
        });

        lError.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lError.setText("No tiene libros prestados");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lEscoger, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bDevolver, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(cbMisLibros, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(94, 94, 94))))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(bAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(lError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addGap(38, 38, 38)
                .addComponent(lEscoger)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbMisLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(lError)
                .addGap(1, 1, 1)
                .addComponent(bDevolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(bAtras)
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que gestiona el evento de pulsar el botón de atrás.
     * Crea un nuevo panel de usuario y se deshace de esta interfaz
     * 
     * @param evt -> Evento de pulsación del botón.
     */
    private void bAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAtrasActionPerformed
        new PanelUsuario(this.usuario).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bAtrasActionPerformed

    /**
     * Método que gestiona el evento de pulsar el botón de devolver.
     * Recupera el valor seleccionado en el ComboBox e intenta devolver ese 
     * libro a través de la fachada. Comprueba también si esa devolución da lugar
     * a castigo y, si es así, se lo notifica al usuario.
     * 
     * @param evt -> Evento de pulsación del botón.
     */
    private void bDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDevolverActionPerformed
        Libro libroDevuelto = libros.getLibro(cbMisLibros.getSelectedIndex());
        int castigo = this.fachada.devolverLibro(libroDevuelto.getIdLibro(), this.usuario.getDni());
        
        if(castigo > 0) {
            JOptionPane.showMessageDialog(this,
                    "El libro \""+libroDevuelto.getNombre()+"\" se ha devuelto correctamente.\nComo has devuelto fuera de tu plazo, se te ha castigado "+castigo+" días.",
                    "Devolución Correcta",
                    JOptionPane.WARNING_MESSAGE);
            
            // Recargamos el usuario desde la base de datos para actualizar su castigo
            this.usuario = (Usuario) fachada.recuperarUsuario(this.usuario.getDni());
        }
        else {
            JOptionPane.showMessageDialog(this,
                    "El libro \""+libroDevuelto.getNombre()+"\" se ha devuelto correctamente.",
                    "Devolución Correcta",
                    JOptionPane.INFORMATION_MESSAGE);
        }
        
        libros.eliminarLibro(libroDevuelto);
        comprobarLibrosUsuario();
    }//GEN-LAST:event_bDevolverActionPerformed

    /**
     * Evento de cierre de ventana, notifica al log del cierre de sesión del
     * usuario
     *
     * @param evt -> evento del cierre de ventana
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fachada.logInfoExterna("Cierre de sesión de usuario con DNI " + this.usuario.getDni());
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAtras;
    private javax.swing.JButton bDevolver;
    private javax.swing.JComboBox<String> cbMisLibros;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lError;
    private javax.swing.JLabel lEscoger;
    // End of variables declaration//GEN-END:variables
}
